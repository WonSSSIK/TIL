##목차 

1.도메인 모델 시작하기 
1.1 도메인이란?

도메인은 소프트웨어로 해결하고자 하는 문제 영역
온라인 서점 소프트웨어
온라인으로 책을 판매하는 데 필요한 상품조회, 구매, 결제, 배송 추적 등의 기능 등을 
어떻게 소프트웨어 적으로 제공할 것인가 

도메인은 여러 하위 도메인으로 구성 

주문 회원 혜택 회원 카탈로그 리뷰 정산 배송 결제 

각각의 문제 영역은 자체적 구현을 통해 해결할 수 있고, 외부 시스템(모듈)을 통해 해결 가능하다.(PG서비스,외부 물류 서비스(택배))




1.2 도메인 전문가와 개발자 간 지식 공유  
현업, 소프트웨어의 전체 프로세스 요구사항을 정의하고 제대로 이해하고 구현해야 한다. 
개발자와 현업간의 대화를 통해 요구사항을 올바르게 이해해야 한다. 

도메인 전문가, 관계자, 개발자가 같은 지식을 공유하고 직접 소통 

요구사항 그대로가 아닌 왜 이런 요구 사항이 발생했는지 파악 필요 


1.3 도메인 모델 
도메인모델 
- 객체 기반 도메인 모델 
- 상태 다이어 그램을 이용한 모델링 
- 그래프 , 수학공식 등을 활용해서 도메인 모델을 만들 수 있다. 
- 도메인을 이해하는데 도움이 된다면 어떤 표현 방식이든 좋다. 
도메인 모델은 여러 관계자들이 동일한 모습으로 도메인을 이해하고 도메인 지식을 공유하는 데 도움을 준다.

도메인 모델  개념 모델 



1.4 도메인 모델 패턴 
Presentation
Application 
Domain
Infrastructure 

사용자의 요청을 처리하고 사용자에게 정보를 보여준다. 
사용자가 요청한 기능을 실행한다. 업무로직을 직접 구현하지 않으며 도메인 계층을 조합해서 기능을 실행한다. 
시스템이 제공할 도메인 규칙을 구현한다. 
데이베이스나 메시징 시스템과 같은 외부 시스템과의 연동을 처리한다. 

도메인 모델은 아키텍쳐 상의 도메인 계층을 객체 지향 기법으로 구현하는 패턴을 말한다. 
도메인 계층은 도메인의 핵심 규칙을 구현한다. 

주문과 관련된 중요업무규칙은 주문 도메인 모델(order orderstate)에서 구현 
핵심 규칙을 구현한 코드는 도메인 모델에만 위치하기 때문에 규칙이 바뀌거나 규칙을 확장해야 할 때 다른 코드에 영향을 덜 주고 변경 내역을 모델에 반영할 수 있다. 

개념모델은 순수하게 문제를 분석한 결과물 
구현 모델은 개념모델을 구현 가능한 형태의 모델로 점진적으로 발전 시킨 것 
프로젝트 초기에는 개요 수준의 개념 모델로 도메인에 대한 전체 윤곽을 이해하는 데 집중하고 구현하는 과정에서 개념 모델을 구현 모델로 점진적으로 발전시킨다. 


1.5 도메인 모델 도출 

기획서, 유스케이스, 사용자 스토리 와 같은 요구사항과 관련자와의 대화를 통해 도메인을 이해하고 이를 바탕으로 도메인 모델 초안을 만들어야 코드를 작성할 수 있다. 
기본작업 -> 핵심 구성요소, 규칙, 기능을 찾는다 ( 이과정은 요구사항에서 출발한다.)
요구사항 분석 -> 필요한 기능 도출 



1.6 엔티티와 밸류 
엔티티
엔티티의 식별자 생성 
밸류 타입
엔티티 식별자와 밸류 타입 
도메인 모델에 set 메서드 넣지 않기
1.7 돔인 용어와 유비쿼터스 언어 

2. 아키텍처 개요 
2.1 네 개의 영역
2.2 계층 구조 아키텍쳐 
2.3 DIP 
DIP  주의사항 
DIP와 아키텍쳐 

2.4 도메인 영역의 주요 구성요소 
엔티티와 밸류 
애그리거트 
리포지터리 
요청처리흐름 
인프라스트럭처 개요 
모듈 구성 

